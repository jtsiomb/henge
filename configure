#!/bin/sh

opt=yes
dbg=yes
prefix=/usr/local
version=`head -1 README | sed 's/^.*- //'`

echo "configuring henge $version ..."

# parse command-line options
for arg; do
	case "$arg" in
	--prefix=*)
		value=`echo $arg | sed 's/--prefix=//'`
		prefix=${value:-$prefix}
		;;

	--enable-opt)
		opt=yes;;
	--disable-opt)
		opt=no;;

	--enable-debug)
		dbg=yes;;
	--disable-debug)
		dbg=no;;

	--help)
		echo 'usage: ./configure [options]'
		echo 'options:'
		echo '  --prefix=<path>: installation path (default: /usr/local)'
		echo '  --enable-opt: enable speed optimizations (default)'
		echo '  --disable-opt: disable speed optimizations'
		echo '  --enable-debug: include debugging symbols (default)'
		echo '  --disable-debug: do not include debugging symbols'
		echo 'all invalid options are silently ignored'
		exit 0
		;;
	esac
done

echo "prefix: $prefix"
echo "optimize for speed: $opt"
echo "include debugging symbols: $dbg"

# generate the makefile
echo 'creating makefile ...'
echo '#this makefile is automatically generated, do not modify' >Makefile
echo "PREFIX = $prefix" >>Makefile

if [ "$dbg" = yes ]; then
	echo 'dbg = -g' >>Makefile
fi
if [ "$opt" = yes ]; then
	echo 'opt = -O3' >>Makefile
fi

sys=`uname -s`
if [ "$sys" = Darwin ]; then
	echo 'shared = -dynamiclib' >>Makefile
	echo 'so = dylib' >>Makefile
	gl_libs='-framework OpenGL'
else
	echo 'shared = -shared' >>Makefile
	echo 'so = so' >>Makefile
	echo 'pic = -fPIC' >>Makefile

	if [ "$sys" != mingw ]; then
		gl_libs='-lGL -lGLU'
	else
		gl_libs='-lopengl32 -lglu32'
	fi
fi
echo "gl_libs = $gl_libs" >>Makefile
echo >>Makefile
cat Makefile.in >>Makefile

# create pkg-config file
echo '# this pkg-config file is generated automatically, do not edit' >henge.pc
echo >>henge.pc
echo "prefix=$prefix" >>henge.pc
echo "ver=$version" >>henge.pc
echo "gl_libs=$gl_libs" >>henge.pc
echo >>henge.pc
cat henge.pc.in >>henge.pc

echo 'configuration completed, type make (or gmake) to build.'
